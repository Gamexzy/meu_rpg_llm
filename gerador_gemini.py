import google.generativeai as genai
import concurrent.futures
import os
import time
import re
import ast # Usado para avaliar strings de lista Python com segurança

# --- Configuração da API do Gemini ---
if "GEMINI_API_KEY" not in os.environ:
    print("Por favor, defina a variável de ambiente GEMINI_API_KEY com sua chave Gemini.")
    exit()

genai.configure(api_key=os.environ["GEMINI_API_KEY"])

# --- Funções Auxiliares ---

def extract_prompts_from_file_content(content: str) -> list[dict]:
    """
    Extrai os nomes dos gêneros de RPG e seus prompts correspondentes de uma string de conteúdo.
    O formato esperado é "Gênero: Nome do Gênero (Descrição)\n" seguido pelo prompt entre aspas.
    Cada bloco de gênero é delimitado por "---".
    """
    genres_prompts = []
    # Expressão regular para encontrar o nome do gênero (grupo 1) e o prompt (grupo 2).
    # re.DOTALL permite que '.' corresponda a caracteres de nova linha dentro do prompt.
    matches = re.findall(r"Gênero:\s*([A-Za-zÀ-ú\s-]+)\s*\(.*?\)\s*\"(.*?)\" ---", content, re.DOTALL)
    
    for match in matches:
        genre_name = match[0].strip()
        prompt_content = match[1].strip()
        
        # Remove marcadores de bloco de código Python que podem estar no prompt,
        # caso o prompt no arquivo tenha sido formatado com eles.
        if prompt_content.startswith("```python"):
            prompt_content = prompt_content[len("```python"):].strip()
        if prompt_content.endswith("```"):
            prompt_content = prompt_content[:-len("```")].strip()
            
        genres_prompts.append({"genero": genre_name, "prompt": prompt_content})
    return genres_prompts

def get_generated_genre_names(output_dir: str) -> set[str]:
    """
    Retorna um conjunto de nomes de gêneros (normalizados para filename) para os quais
    já existem arquivos .py gerados no diretório de saída.
    """
    generated_names = set()
    if os.path.exists(output_dir):
        for filename in os.listdir(output_dir):
            if filename.endswith(".py") and filename != "consolidado_rpg.py":
                # Remove a extensão .py para obter o nome normalizado do gênero
                normalized_name = filename[:-3] 
                generated_names.add(normalized_name)
    return generated_names

def chamar_gemini_e_salvar(genre_name: str, prompt: str, output_dir: str, model_name: str = "gemini-2.5-flash") -> str:
    """
    Chama a API do Gemini com um prompt específico, salva o texto gerado em um arquivo
    dentro do diretório de saída especificado e retorna uma mensagem de sucesso ou erro.
    """
    try:
        model = genai.GenerativeModel(model_name)
        
        # Define o modo de resposta para JSON, já que o prompt pede uma lista Python
        # equivalente a JSON. Isso ajuda o Gemini a retornar o formato correto.
        generation_config = {
            "response_mime_type": "application/json"
        }

        response = model.generate_content(prompt, generation_config=generation_config)
        
        # Normaliza o nome do gênero para criar um nome de arquivo seguro
        # Substitui espaços e caracteres especiais por underscore e converte para minúsculas.
        filename = f"{re.sub(r'[^\w\s-]', '', genre_name).replace(' ', '_').lower()}.py"
        filepath = os.path.join(output_dir, filename)

        # Garante que a resposta seja tratada como uma string antes de escrever
        response_text = response.text if response.text else "" 

        # Salva a resposta em um arquivo
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(response_text)
        
        time.sleep(60 / 5)  # Ajuste para 5 requests por minuto, se necessário
        
        return f"Sucesso: Saída para o gênero '{genre_name}' salva em '{filepath}'."
    except Exception as e:
        return f"Erro ao chamar Gemini ou salvar para o gênero '{genre_name}': {e}"

def consolidar_e_gerar_final(output_dir: str, model_name: str = "gemini-2.5-flash") -> None:
    """
    Lê todos os arquivos .py no diretório de saída, consolida os dados de RPG
    e chama um Gemini final para gerar um arquivo consolidado.
    """
    all_data = []
    
    print("\nIniciando consolidação de todos os arquivos gerados (existentes e novos)...")
    for filename in os.listdir(output_dir):
        if filename.endswith(".py") and filename != "consolidado_rpg.py": # Ignora o arquivo de saída final
            filepath = os.path.join(output_dir, filename)
            try:
                with open(filepath, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # Usa ast.literal_eval para converter a string da lista Python em um objeto Python
                # Isso é mais seguro do que simplesmente eval()
                extracted_list = ast.literal_eval(content)
                
                if isinstance(extracted_list, list):
                    # Filtra apenas as categorias desejadas antes de adicionar à lista total
                    filtered_data = [
                        item for item in extracted_list 
                        if isinstance(item, dict) and item.get("nome_tabela") in ["locais", "elementos_universais", "personagens", "faccoes"]
                    ]
                    all_data.extend(filtered_data)
                    print(f"Dados do arquivo '{filename}' adicionados para consolidação.")
                else:
                    print(f"Aviso: Conteúdo de '{filename}' não é uma lista Python válida, ignorando.")
            except (SyntaxError, ValueError) as e:
                print(f"Erro ao parsear o conteúdo de '{filename}': {e}. Verifique o formato do arquivo.")
            except Exception as e:
                print(f"Erro inesperado ao ler o arquivo '{filename}': {e}")

    if not all_data:
        print("Nenhum dado válido encontrado para consolidar. Encerrando consolidação.")
        return

    # Converte a lista consolidada de volta para uma string formatada para o prompt do Gemini
    consolidated_data_str = str(all_data)

    # Prompt para o Gemini consolidar e formatar os dados
    final_prompt = f"""
    Você é um Agente Escriba e um especialista em design de mundos de RPG.
    Sua tarefa é revisar e apresentar uma lista consolidada de termos de RPG,
    garantindo que o formato seja uma lista Python de dicionários, com cada dicionário
    tendo as chaves "nome_tabela" e "nome_tipo".

    A lista de dados brutos que você deve consolidar e formatar é a seguinte:
    {consolidated_data_str}

    Por favor, retorne **apenas** a lista Python de dicionários, formatada de forma limpa,
    sem nenhum texto adicional antes ou depois. Cada dicionário deve conter "nome_tabela"
    e "nome_tipo". Certifique-se de que os dados estejam consistentes e bem organizados.
    Se houver repetições exatas, você pode tentar agrupá-las ou mantê-las se representarem
    diferentes contextos (no entanto, a geração original deve evitar repetições exatas).
    O resultado deve ser diretamente colável em um arquivo .py.
    """
    
    print("\nEnviando prompt final para o Gemini para consolidação...")
    try:
        model = genai.GenerativeModel(model_name)
        final_response = model.generate_content(final_prompt, generation_config={"response_mime_type": "application/json"})
        
        final_filename = os.path.join(output_dir, "consolidado_rpg.py")
        with open(final_filename, 'w', encoding='utf-8') as f:
            f.write(final_response.text)
        print(f"Sucesso: Dados consolidados salvos em '{final_filename}'.")
    except Exception as e:
        print(f"Erro ao chamar Gemini para consolidação final ou salvar arquivo: {e}")

# --- Automação Principal ---

def automacao_gemini_para_rpg(prompts_por_genero: list[dict], output_dir: str, max_workers: int = 5) -> None:
    """
    Coordena as chamadas paralelas à API do Gemini para cada prompt de gênero RPG,
    salvando os resultados em arquivos separados.
    """
    # Cria o diretório de saída se ele ainda não existir.
    os.makedirs(output_dir, exist_ok=True)
    
    # Lista para armazenar os futuros (resultados pendentes)
    futures_list = []

    if not prompts_por_genero:
        print("Nenhum prompt para gerar. Todos os gêneros já devem estar atualizados.")
        return

    print(f"Iniciando {len(prompts_por_genero)} chamadas concorrentes ao Gemini (modelo 'gemini-2.5-flash') para os gêneros faltando com {max_workers} workers...")
        
    with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:
        for item in prompts_por_genero:
            future = executor.submit(chamar_gemini_e_salvar, item['genero'], item['prompt'], output_dir)
            futures_list.append(future)
        
        # Itera sobre os futuros à medida que são concluídos, imprimindo os resultados.
        for future in concurrent.futures.as_completed(futures_list):
            try:
                mensagem = future.result()
                print(mensagem)
            except Exception as exc:
                print(f"Erro inesperado ao processar o futuro: {exc}")
    
    print("\nTodas as chamadas individuais (para gêneros faltando) foram concluídas.")

# --- Execução Principal ---

if __name__ == "__main__":
    # Conteúdo do arquivo "Prompts de Geração de Termos por Gênero de RPG.md"
    # IMPORTANTE: Em um ambiente de execução real, você obteria este conteúdo
    # usando uma ferramenta como 'file_content_fetcher' para ler o arquivo enviado.
    # Para demonstração e teste local, o conteúdo está hardcoded aqui.
    raw_prompts_content = """
### **Prompts para Geração de Termos por Gênero de RPG**

#### **Gênero: Arcanum (Fantasia Sombria, Magia Antiga, Mistério, Sobrenatural)**

"Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Arcanum (Fantasia Sombria, Magia Antiga, Mistério, Sobrenatural). Sua tarefa é expandir o vocabulário para a metatabela tipos_entidades do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves "nome_tabela" e "nome_tipo". Para cada uma das categorias de nome_tabela listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de nome_tipo, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero.

**Categorias para Geração:**
* **`locais`**: Representa onde as ações acontecem.
* **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais.
* **`personagens`**: Representa jogadores, NPCs, monstros, criaturas.
* **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças.

**Formato de Saída (apenas a lista Python):**
```python
[
    # Locais
    {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},
    {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},
    # ...
    # Elementos Universais
    {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},
    {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},
    # ...
    # Personagens
    {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},
    {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ...
    # Facções
    {"nome_tabela": "faccoes", "nome_tipo": "NOVO TIPO DE FACÇÃO GENÉRICA 1"},
    {"nome_tabela": "faccoes", "nome_tipo": "NOVO TIPO DE FACÇÃO ESPECÍFICA 2"},
    # ...
]
```" --- #### Gênero: Aether (Fantasia Épica, Alta Fantasia, Magia Cósmica, Aventura Aérea) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Aether (Fantasia Épica, Alta Fantasia, Magia Cósmica, Aventura Aérea). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},     # ...     # Facções     {"nome_tabela": "faccoes", "nome_tipo": "NOVO TIPO DE FACÇÃO GENÉRICA 1"},     {"nome_tabela": "faccoes", "nome_tipo": "NOVO TIPO DE FACÇÃO ESPECÍFICA 2"},     # ... ] ```" --- #### Gênero: Cosmos (Ficção Científica (Space Opera), Exploração Espacial, Grandiosa, Cósmica) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Cosmos (Ficção Científica (Space Opera), Exploração Espacial, Grandiosa, Cósmica). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Chromos (Ficção Científica (Cyberpunk/Biopunk), Distopia, Tecnologia Avançada, Arte) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Chromos (Ficção Científica (Cyberpunk/Biopunk), Distopia, Tecnologia Avançada, Arte). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Éter (Fantasia (com elementos etéreos), Paranormal, Magia Espiritual) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Éter (Fantasia (com elementos etéreos), Paranormal, Magia Espiritual). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Nexus (Ficção Científica, Multiverso, Conexões Interdimensionais, Mistério) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Nexus (Ficção Científica, Multiverso, Conexões Interdimensionais, Mistério). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Crono (Ficção Científica, Viagem no Tempo, Temporal, Paradoxo) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Crono (Ficção Científica, Viagem no Tempo, Temporal, Paradoxo). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Gênese (Ficção Científica (Pós-apocalíptico/Utopia), Criação, Início, Recomeço) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Gênese (Ficção Científica (Pós-apocalíptico/Utopia), Criação, Início, Recomeço). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Vácuo (Ficção Científica (Horror Cósmico), Existencial, Solidão, Mistério) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Vácuo (Ficção Científica (Horror Cósmico), Existencial, Solidão, Mistério). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Echo (Mistério, Suspense, Sobrenatural, Pós-apocalíptico (com resquícios do passado)) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Echo (Mistério, Suspense, Sobrenatural, Pós-apocalíptico (com resquícios do passado)). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Singularidade (Ficção Científica (Transumanismo/Pós-Humano), Futuro Distópico/Utopista) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Singularidade (Ficção Científica (Transumanismo/Pós-Humano), Futuro Distópico/Utopista). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Miragem (Fantasia (Ilusão), Mistério, Psicológico, Deserto) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Miragem (Fantasia (Ilusão), Mistério, Psicológico, Deserto). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Quântico (Ficção Científica, Física Avançada, Realidades Paralelas, Surrealismo) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Quântico (Ficção Científica, Física Avançada, Realidades Paralelas, Surrealismo). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Rúnico (Fantasia (Nórdica/Antiga), Magia Rúnica, Mistério Arcaico) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Rúnico (Fantasia (Nórdica/Antiga), Magia Rúnica, Mistério Arcaico). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Vapor (Steampunk, Revolução Industrial, Inovação Mecânica, Aventura Aérea) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Vapor (Steampunk, Revolução Industrial, Inovação Mecânica, Aventura Aérea). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Sombra (Fantasia Sombria, Mistério, Sobrenatural, Noir) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Sombra (Fantasia Sombria, Mistério, Sobrenatural, Noir). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Forja (Fantasia (Industrial/Artesanato), Alta Fantasia, Conflito, Construção) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Forja (Fantasia (Industrial/Artesanato), Alta Fantasia, Conflito, Construção). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Cripta (Horror, Fantasia Sombria, Mistério, Arqueologia Sombria) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Cripta (Horror, Fantasia Sombria, Mistério, Arqueologia Sombria). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Díade (Fantasia (Dualidade), Conflito, Equilíbrio, Relações Complexas) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Díade (Fantasia (Dualidade), Conflito, Equilíbrio, Relações Complexas). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Espectro (Sobrenatural, Horror, Mistério, Existencial, Fantasma) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Espectro (Sobrenatural, Horror, Mistério, Existencial, Fantasma). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Lumen (Alta Fantasia, Magia da Luz, Esperança, Aventura Épica) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Lumen (Alta Fantasia, Magia da Luz, Esperança, Aventura Épica). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Crepúsculo (Fantasia Sombria, Transição, Mistério, Fim de uma Era) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Crepúsculo (Fantasia Sombria, Transição, Mistério, Fim de uma Era). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Vortex (Ficção Científica, Multiverso, Caos, Viagem Interdimensional) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Vortex (Ficção Científica, Multiverso, Caos, Viagem Interdimensional). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Crono-Vazio (Ficção Científica, Horror Cósmico, Viagem no Tempo (distorcida), Apocalipse Temporal) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Crono-Vazio (Ficção Científica, Horror Cósmico, Viagem no Tempo (distorcida), Apocalipse Temporal). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Synthetica (Ficção Científica, Cyberpunk, Inteligência Artificial, Pós-humano) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Synthetica (Ficção Científica, Cyberpunk, Inteligência Artificial, Pós-humano). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Veridia (Fantasia (Natureza), Ecologia, Aventura, Reinos Naturais) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Veridia (Fantasia (Natureza), Ecologia, Aventura, Reinos Naturais). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Oráculo (Mistério, Profecia, Fantasia (Divina/Arcana), Escolha e Destino) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Oráculo (Mistério, Profecia, Fantasia (Divina/Arcana), Escolha e Destino). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Nautilus (Steampunk/Dieselpunk, Aventura Submarina, Exploração, Mistério Marinho) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Nautilus (Steampunk/Dieselpunk, Aventura Submarina, Exploração, Mistério Marinho). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Gênesis-Zero (Ficção Científica (Pós-apocalíptico), Reinício, Origem, Mistério Pré-histórico) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Gênesis-Zero (Ficção Científica (Pós-apocalíptico), Reinício, Origem, Mistério Pré-histórico). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Aetheria (Alta Fantasia, Magia Aérea, Reinos Flutuantes, Aventura Épica) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Aetheria (Alta Fantasia, Magia Aérea, Reinos Flutuantes, Aventura Épica). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Arcana (Fantasia Clássica, Magia Oculta, Sociedades Secretas, Mistério) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Arcana (Fantasia Clássica, Magia Oculta, Sociedades Secretas, Mistério). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Quasar (Ficção Científica (Grandiosa), Exploração Espacial, Fenômenos Cósmicos) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Quasar (Ficção Científica (Grandiosa), Exploração Espacial, Fenômenos Cósmicos). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Glacialis (Fantasia (Gelo/Frio), Sobrevivência, Antigo, Mistério de Civilizações Perdidas) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Glacialis (Fantasia (Gelo/Frio), Sobrevivência, Antigo, Mistério de Civilizações Perdidas). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Forjador (Fantasia Industrial, Magia da Criação, Conflito, Artesanato Divino) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Forjador (Fantasia Industrial, Magia da Criação, Conflito, Artesanato Divino). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Umbral (Fantasia Sombria, Horror, Dimensões de Sombra, Existencial) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Umbral (Fantasia Sombria, Horror, Dimensões de Sombra, Existencial). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Relíquia (Fantasia (Arqueologia), Mistério, Aventura, Antigo Artefato) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Relíquia (Fantasia (Arqueologia), Mistério, Aventura, Antigo Artefato). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Metrópole (Cyberpunk, Noir, Cidade Grande, Conflito Urbano, Ficção Científica) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Metrópole (Cyberpunk, Noir, Cidade Grande, Conflito Urbano, Ficção Científica). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Bioma (Ficção Científica (Exploração), Ecologia, Criaturas, Sobrevivência) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Bioma (Ficção Científica (Exploração), Ecologia, Criaturas, Sobrevivência). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Ancora (Aventura, Viagem Marítima, Mistério (Náutico), Retorno) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Ancora (Aventura, Viagem Marítima, Mistério (Náutico), Retorno). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```" --- #### Gênero: Resíduos (Pós-apocalíptico, Sobrevivência, Distopia, Recursos Escassos) "Você é um Agente Escriba e um especialista em design de mundos de RPG focado em atmosferas de Resíduos (Pós-apocalíptico, Sobrevivência, Distopia, Recursos Escassos). Sua tarefa é expandir o vocabulário para a metatabela `tipos_entidades` do nosso sistema de RPG. Esta tabela garante a consistência e integridade dos dados em nosso universo dinâmico. Gere uma lista de dicionários Python (que pode ser diretamente colada em um arquivo .py), onde cada dicionário representará um novo tipo de entidade. Cada dicionário deve ter as chaves `"nome_tabela"` e `"nome_tipo"`. Para cada uma das categorias de `nome_tabela` listadas abaixo, por favor, gere **10 a 15 exemplos novos e diversos** de `nome_tipo`, incluindo tanto termos genéricos quanto específicos que se encaixem perfeitamente neste gênero. **Categorias para Geração:** * **`locais`**: Representa onde as ações acontecem. * **`elementos_universais`**: Representa tecnologias, magias, recursos, fenômenos, itens especiais. * **`personagens`**: Representa jogadores, NPCs, monstros, criaturas. * **`faccoes`**: Representa reinos, corporações, guildas, tribos, alianças. **Formato de Saída (apenas a lista Python):** ```python [     # Locais     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL GENÉRICO 1"},     {"nome_tabela": "locais", "nome_tipo": "NOVO TIPO DE LOCAL ESPECÍFICO 2"},     # ...     # Elementos Universais     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO GENÉRICO 1"},     {"nome_tabela": "elementos_universais", "nome_tipo": "NOVO TIPO DE ELEMENTO ESPECÍFICO 2"},     # ...     # Personagens     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM GENÉRICO 1"},     {"nome_tabela": "personagens", "nome_tipo": "NOVO TIPO DE PERSONAGEM ESPECÍFICO 2"},
    # ... ] ```
    """

    # Extrai todos os prompts de gênero do conteúdo do arquivo de entrada
    all_prompts = extract_prompts_from_file_content(raw_prompts_content)
    
    # Define o diretório de saída para os resultados do Gemini
    output_directory = "dados_gemini"

    # Cria o diretório de saída se ele ainda não existir.
    os.makedirs(output_directory, exist_ok=True)

    # Obtém os nomes dos gêneros que já foram gerados
    generated_filenames_normalized = get_generated_genre_names(output_directory)

    # Filtra os prompts para gerar apenas os gêneros faltando
    prompts_to_generate = []
    print("\nVerificando gêneros para gerar...")
    for item in all_prompts:
        # Normaliza o nome do gênero do prompt para comparar com os nomes dos arquivos gerados
        normalized_genre_from_prompt = re.sub(r'[^\w\s-]', '', item['genero']).replace(' ', '_').lower()
        if normalized_genre_from_prompt not in generated_filenames_normalized:
            prompts_to_generate.append(item)
            print(f"Gênero faltando detectado: '{item['genero']}' - será gerado.")
        else:
            print(f"Gênero '{item['genero']}' já existe - pulando.")

    # Define o número de workers para processamento paralelo.
    num_workers = 5 

    # 1. Executa a automação para chamar o Gemini e salvar os resultados individuais (apenas para os faltando)
    automacao_gemini_para_rpg(prompts_to_generate, output_directory, max_workers=num_workers)

    # 2. Consolida todos os arquivos gerados (existentes e os recém-gerados) em um único arquivo final
    consolidar_e_gerar_final(output_directory)
